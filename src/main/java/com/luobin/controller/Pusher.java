package com.luobin.controller;import com.fasterxml.jackson.core.JsonProcessingException;import com.luobin.pojo.Forecast;import com.luobin.utils.*;import lombok.extern.slf4j.Slf4j;import me.chanjar.weixin.mp.api.WxMpInMemoryConfigStorage;import me.chanjar.weixin.mp.api.WxMpService;import me.chanjar.weixin.mp.api.impl.WxMpServiceImpl;import me.chanjar.weixin.mp.bean.template.WxMpTemplateData;import me.chanjar.weixin.mp.bean.template.WxMpTemplateMessage;import org.junit.jupiter.api.Test;import org.springframework.beans.factory.annotation.Value;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.stereotype.Component;@Slf4j@Component@SpringBootTestpublic class Pusher {    private static String appId;    private static String secret;    /**     * 对方微信id     */    private static String user;    /**     * 消息模板id     */    private static String templateId;    @Value("${com.secret}")    public void setSecret(String secret) {Pusher.secret= secret;}    @Value("${com.user}")    public void setUser(String user) {Pusher.user= user;}    @Value("${com.templateId}")    public void setTemplateId(String templateId) {Pusher.templateId= templateId;}    @Value("${com.appId}")    public void setAppId(String appId) {Pusher.appId= appId;}    @Test    void contextLoads() {        push();    }    public static void push(){        //1，配置        WxMpInMemoryConfigStorage wxStorage = new WxMpInMemoryConfigStorage();        wxStorage.setAppId(appId);        wxStorage.setSecret(secret);        WxMpService wxMpService = new WxMpServiceImpl();        wxMpService.setWxMpConfigStorage(wxStorage);        // 推送消息        WxMpTemplateMessage templateMessage = WxMpTemplateMessage.builder()                .toUser(user) // 对方微信                .templateId(templateId) // 消息模板                .build();        // 配置你的信息        Forecast forecast = new Forecast();        try {            forecast = WeatherUtils.getWeather();        } catch (JsonProcessingException e) {            log.error("获取天气失败");            e.printStackTrace();        }        int birthday_jo = JiNianRiUtils.getBirthday_Jo(); // 计算 生日倒计时        int lianAi = JiNianRiUtils.getLianAi(); // 计算 相恋天数        templateMessage.addData(new WxMpTemplateData("riqi", forecast.getDate(), "#00BFFF")); // 日期        templateMessage.addData(new WxMpTemplateData("tianqi", forecast.getWeather(),"#00FFFF")); // 天气        templateMessage.addData(new WxMpTemplateData("ganmao", forecast.getTips(), "#000000")); // 感冒情况        templateMessage.addData(new WxMpTemplateData("city", forecast.getProvince(), "#000000")); // 地区        templateMessage.addData(new WxMpTemplateData("wendu", forecast.getReal(),"#000000")); // 当前温度        templateMessage.addData(new WxMpTemplateData("fengli", forecast.getWindscName()+"("+forecast.getWindsc()+")", forecast.getWindscColour())); // 风量        templateMessage.addData(new WxMpTemplateData("low",forecast.getLowest() + "","#3C55E7")); // 最低气温        templateMessage.addData(new WxMpTemplateData("high",forecast.getHighest()+ "","#FF6347" )); // 最高气温        templateMessage.addData(new WxMpTemplateData("caihongpi", CaiHongPiUtils.getCaiHongPi(),RandomColor.randomColour())); // 彩虹屁 "#FF69B4"        templateMessage.addData(new WxMpTemplateData("lianai", lianAi +"","#FF1493")); // 相恋天数        templateMessage.addData(new WxMpTemplateData("shengri",birthday_jo + "","#FFA500")); //生日倒计时        String beizhu = "";        if(lianAi % 365 == 0){ beizhu += "❤今天是恋爱" + (lianAi / 365) + "周年纪念日！"; }        if(lianAi % 100 == 0){ beizhu += "❤今天是恋爱" + lianAi + "天纪念日！"; }        if(lianAi == 1314){ beizhu += "❤今天是恋爱" + lianAi + "天纪念日！"; }        if(birthday_jo == 0){ beizhu += "❤今天是生日，生日快乐呀！"; }        templateMessage.addData(new WxMpTemplateData("beizhu", beizhu, "#FF0000"));        try {            log.info(templateMessage.toJson());            log.info(wxMpService.getTemplateMsgService().sendTemplateMsg(templateMessage));        } catch (Exception e) {            log.error("推送失败：" + e.getMessage());            e.printStackTrace();        }    }}